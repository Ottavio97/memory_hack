diff -uN ./linux.py /home/ryan/PycharmProjects/mem_remote/venv/lib/python3.10/site-packages/mem_edit/linux.py
--- ./linux.py	2022-09-27 14:23:25.263568093 -0400
+++ /home/ryan/PycharmProjects/mem_remote/venv/lib/python3.10/site-packages/mem_edit/linux.py	2022-09-13 10:48:40.633411290 -0400
@@ -58,7 +58,9 @@
 
     def close(self):
         os.kill(self.pid, signal.SIGSTOP)
+        os.waitpid(self.pid, 0)
         ptrace(ptrace_commands['PTRACE_DETACH'], self.pid, 0, 0)
+        os.kill(self.pid, signal.SIGCONT)
         self.pid = None
 
     def write_memory(self, base_address: int, write_buffer: ctypes_buffer_t):
@@ -111,6 +113,8 @@
         regions = []
         with open('/proc/{}/maps'.format(self.pid), 'r') as maps:
             for line in maps:
+                if "/dev/dri/" in line:
+                    continue
                 bounds, privileges = line.split()[0:2]
 
                 if 'r' not in privileges:
Common subdirectories: ./__pycache__ and /home/ryan/PycharmProjects/mem_remote/venv/lib/python3.10/site-packages/mem_edit/__pycache__
diff -uN ./windows.py /home/ryan/PycharmProjects/mem_remote/venv/lib/python3.10/site-packages/mem_edit/windows.py
--- ./windows.py	2022-09-27 14:23:25.267568087 -0400
+++ /home/ryan/PycharmProjects/mem_remote/venv/lib/python3.10/site-packages/mem_edit/windows.py	2022-09-16 16:00:19.662437213 -0400
@@ -134,6 +134,7 @@
 
 class Process(AbstractProcess):
     process_handle = None
+    pid = None
 
     def __init__(self, process_id: int):
         process_handle = ctypes.windll.kernel32.OpenProcess(
@@ -146,10 +147,12 @@
             raise MemEditError('Couldn\'t open process {}'.format(process_id))
 
         self.process_handle = process_handle
+        self.pid = process_id
 
     def close(self):
         ctypes.windll.kernel32.CloseHandle(self.process_handle)
         self.process_handle = None
+        self.pid = None
 
     def write_memory(self, base_address: int, write_buffer: ctypes_buffer_t):
         try:
@@ -279,7 +282,7 @@
         page_ptr = start
         while page_ptr < stop:
             page_info = get_mem_info(page_ptr)
-            if (page_info.Type == mem_types['MEM_PRIVATE']
+            if ( (page_info.Type == mem_types['MEM_PRIVATE'] or page_info.Type == mem_types['MEM_MAPPED'] or page_info.Type == mem_types['MEM_IMAGE'])
                     and page_info.State == mem_states['MEM_COMMIT']
                     and page_info.Protect & page_protections['PAGE_READABLE'] != 0
                     and (page_info.Protect & page_protections['PAGE_READWRITEABLE'] != 0
